package ariba.buyer.vrealm_3;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * Ariba Web Service
 *
 * This class was generated by Apache CXF 2.7.17
 * 2015-10-12T17:21:14.789+03:00
 * Generated source version: 2.7.17
 * 
 */
@WebServiceClient(name = "RequisitionImportPull", 
                  wsdlLocation = "RequisitionImportPull.wsdl",
                  targetNamespace = "urn:Ariba:Buyer:vrealm_3") 
public class RequisitionImportPull extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("urn:Ariba:Buyer:vrealm_3", "RequisitionImportPull");
    public final static QName RequisitionImportPullPortType = new QName("urn:Ariba:Buyer:vrealm_3", "RequisitionImportPullPortType");
    static {
        URL url = RequisitionImportPull.class.getResource("RequisitionImportPull.wsdl");
        if (url == null) {
            url = RequisitionImportPull.class.getClassLoader().getResource("RequisitionImportPull.wsdl");
        } 
        if (url == null) {
            java.util.logging.Logger.getLogger(RequisitionImportPull.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "RequisitionImportPull.wsdl");
        }       
        WSDL_LOCATION = url;
    }

    public RequisitionImportPull(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public RequisitionImportPull(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public RequisitionImportPull() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public RequisitionImportPull(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public RequisitionImportPull(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public RequisitionImportPull(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     *
     * @return
     *     returns RequisitionImportPullPortType
     */
    @WebEndpoint(name = "RequisitionImportPullPortType")
    public RequisitionImportPullPortType getRequisitionImportPullPortType() {
        return super.getPort(RequisitionImportPullPortType, RequisitionImportPullPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns RequisitionImportPullPortType
     */
    @WebEndpoint(name = "RequisitionImportPullPortType")
    public RequisitionImportPullPortType getRequisitionImportPullPortType(WebServiceFeature... features) {
        return super.getPort(RequisitionImportPullPortType, RequisitionImportPullPortType.class, features);
    }

}
